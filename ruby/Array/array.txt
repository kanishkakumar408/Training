1. accessing element :-

2.7.1 :002 > ary=[1,2,3,4,5,6]
2.7.1 :003 > ary[2]
 => 3 

another method

2.7.1 :004 > ary.at(2)
 => 3 

2. 
adding element in array
2.7.1 :005 > arr=[1,2,3,4]
2.7.1 :006 > arr<<5
 => [1, 2, 3, 4, 5] 

at any position 
2.7.1 :007 > arr.insert(2,3)
 => [1, 2, 3, 3, 4, 5] 

3. Removing item from array
 => [1, 2, 3, 3, 4, 5] 
2.7.1 :008 > arr.pop(3)
 => [3, 4, 5] 

at particular index
2.7.1 :009 > arr=[1,2,3,4,5]
2.7.1 :010 > arr.delete_at(3)
 => 4 

4. Iterating over array
2.7.1 :011 > arr=[1,2,3,4,5]
2.7.1 :012 > arr.each {|a| print a -=10, " "}
-9 -8 -7 -6 -5  => [1, 2, 3, 4, 5] 

reversing string -
2.7.1 :001 > words = %w[one two three four five]
2.7.1 :002 > str=""
2.7.1 :003 > words.reverse_each{|words| str+= "#{words}"}
 => ["one", "two", "three", "four", "five"] 
2.7.1 :004 > p str
"fivefourthreetwoone"
 => "fivefourthreetwoone" 

selecting and rejecting (non destructive)-
2.7.1 :001 > arr=[1,2,3,4,5,6]
2.7.1 :002 > arr.select{|a| a>3}
 => [4, 5, 6] 
2.7.1 :003 > arr.reject{|a| a<3}
 => [3, 4, 5, 6] 

selecting and rejecting(destructive) -
2.7.1 :004 > arr.delete_if {|a| a<4}
 => [4, 5, 6] 

2.7.1 :007 > arr.keep_if{|a| a<4}
 => [1, 2, 3] 

5. New(array) from existing -
2.7.1 :001 > arr=["mat", "henry"]
2.7.1 :002 > ary=Array.new(arr)
2.7.1 :003 > arr.eql?ary
 => true 
2.7.1 :004 > p ary
["mat", "henry"]
 => ["mat", "henry"] 
2.7.1 :005 > arr
 => ["mat", "henry"] 
2.7.1 :006 > 


6. ary & other_ary- new_ary (intersection) :-
2.7.1 :001 > [1,2,3,4,5,6,7] & [2,4,6,3]
 => [2, 3, 4, 6] 

7. ary | other_ary - new_ary(union) :-
2.7.1 :002 > [1,2,3,4,5,6,7] | [2,4,6,3,8]
 => [1, 2, 3, 4, 5, 6, 7, 8] 

8. ary + other_ary - new_ary :-
2.7.1 :003 > [1,2,3] + [2,3,4,5]
 => [1, 2, 3, 2, 3, 4, 5]

9. ary - other_ary -> new_ary :-
2.7.1 :006 > [1,2,3,4,5]-[2,3]
 => [1, 4, 5] 

10. ary<<obj - new_ary :-
2.7.1 :008 > a<<"c"<<"f"<<[4,5]
 => [1, 2, "c", "f", [4, 5]] 

11. arr<=>other_ary- -1,0,+1 :-
2.7.1 :009 > [1,3,5,7,6]<=>[1,2,3,4,5,6,7]
 => 1 

12. arr==other_arr :-
2.7.1 :009 > [1,3,5,7,6]==[1,2,3,4,5,6,7]
 => false

13. ary[index] :-
2.7.1 :013 > a=["a","b","c","d","e"]
2.7.1 :014 > a[2]+a[4]
 => "ce" 

14. ary[index,lenght]- new_ary :-
2.7.1 :016 > a=["a","b","c","d","e"]
2.7.1 :017 > a[2,4]
 => ["c", "d", "e"] 

15. .bsearch{|x| blocl}-> ele :-
2.7.1 :024 > arr=[1,2,3,5,6,7,8,9]
2.7.1 :025 > arr.bsearch{|x| x>=4}
 => 5 



